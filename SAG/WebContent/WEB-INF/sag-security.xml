<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- Donne les droits aux différentes url -->
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="*" access="permitAll" />

		<access-denied-handler error-page="/SAG/accessdenied" />

		<form-login login-page="/SAG/login" default-target-url="/SAG/home"
			username-parameter="username" password-parameter="password"
			always-use-default-target="true" authentication-failure-url="/SAG/accessdenied" />

		<logout invalidate-session="true" logout-url="/SAG/logout"
			logout-success-url="/SAG/logoutconfirm" />
	</http>

	<!-- Fournit les requêtes ainsi que l'algorithme de cryptage pour vérifier 
		le mail et le mot de passe utilisé pour l'authentification -->
	<authentication-manager alias="authenticationManager">
		<!-- <authentication-provider> <password-encoder hash="sha" /> <jdbc-user-service 
			data-source-ref="SAG_DS" users-by-username-query=" select mail,password, 
			actif from Person where mail=?" authorities-by-username-query=" select p.mail, 
			r.role from Person p, Role r where p.role_id = r.id and p.mail =? " /> </authentication-provider> -->
	</authentication-manager>

<http entry-point-ref="casEntryPoint">
   <custom-filter position="CAS_FILTER" ref="casFilter" />
</http>

</beans:beans>
