<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- Donne les droits aux différentes url -->
	<!-- <http auto-config="true" use-expressions="true"> -->
	<!-- <intercept-url pattern="/**" access="permitAll" /> -->
	<!-- <access-denied-handler error-page="/accessdenied" /> -->
	<!-- <form-login login-page="login" default-target-url="/home" -->
	<!-- username-parameter="username" password-parameter="password" -->
	<!-- always-use-default-target="true" authentication-failure-url="/accessdenied" 
		/> -->
	<!-- <logout invalidate-session="true" logout-url="logout" -->
	<!-- logout-success-url="logoutconfirm" /> -->
	<!-- <form-login login-page="/login" default-target-url="/home" -->
	<!-- username-parameter="username" password-parameter="password" -->
	<!-- always-use-default-target="true" authentication-failure-url="/accessdenied" 
		/> -->
	<!-- <logout invalidate-session="true" logout-url="/logout" -->
	<!-- logout-success-url="/logoutconfirm" /> -->
	<!-- </http> -->
	<!-- Fournit les requêtes ainsi que l'algorithme de cryptage pour vérifier -->
	<!-- le mail et le mot de passe utilisé pour l'authentification -->
	<!-- <authentication-manager alias="authenticationManager"> -->
	<!-- <authentication-provider> -->
	<!-- <password-encoder hash="sha" /> -->
	<!-- <jdbc-user-service data-source-ref="SAG_DS" -->
	<!-- users-by-username-query=" -->
	<!-- select mail,password, actif from Person where mail=?" -->
	<!-- authorities-by-username-query=" -->
	<!-- select p.mail, r.role from Person p, Role r where p.role_id = r.id 
		and p.mail -->
	<!-- =? " /> -->
	<!-- </authentication-provider> -->
	<!-- </authentication-manager> -->




	<http entry-point-ref="casEntryPoint" use-expressions="true">
		<intercept-url pattern="/home" access="hasRole('ROLE_USER')" />
		<!-- <intercept-url pattern="/login" access="hasRole('ROLE_ADMIN')" /> -->
		<access-denied-handler error-page="/accessdenied" />
		<form-login login-page="login" default-target-url="/home"
			username-parameter="username" password-parameter="password"
			always-use-default-target="true" authentication-failure-url="/accessdenied" />
		<logout invalidate-session="true" logout-url="logout" logout-success-url="/logoutconfirm" />

		<!-- Configuration pour le CAS -->
		<custom-filter position="CAS_FILTER" ref="casFilter" />
<!-- 		<custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER"/> -->
<!--     	<custom-filter ref="singleLogoutFilter" before="CAS_FILTER"/> -->
	</http>

	<!-- Url de retour du CAS -->
	<beans:bean id="serviceProperties"
		class="org.springframework.security.cas.ServiceProperties">
		<beans:property name="service"
			value="http://localhost:8080/SAG/j_spring_cas_security_check" />
		<beans:property name="sendRenew" value="false" />
	</beans:bean>

	<!-- Filtre d'authentification CAS -->
	<beans:bean id="casFilter"
		class="org.springframework.security.cas.web.CasAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
	</beans:bean>

	<!-- Point d'entrée du CAS -->
	<beans:bean id="casEntryPoint"
		class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
		<beans:property name="loginUrl"
			value="https://ident.univ-amu.fr:443/cas/login" />
		<beans:property name="serviceProperties" ref="serviceProperties" />
	</beans:bean>

	<!-- Configuration du athentication Manager du CAS -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="casAuthenticationProvider" />
	</authentication-manager>

	<!-- Configuration du authenticationProvider du CAS pour gérer les rôles -->
	<beans:bean id="casAuthenticationProvider"
		class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
		<beans:property name="authenticationUserDetailsService">
			<beans:bean
				class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
				<beans:constructor-arg ref="jdbcCasUserService" />
			</beans:bean>
		</beans:property>
		<beans:property name="serviceProperties" ref="serviceProperties" />
		<beans:property name="ticketValidator">
			<beans:bean
				class="org.jasig.cas.client.validation.Cas20ProxyTicketValidator">
				<beans:constructor-arg index="0"
					value="https://ident.univ-amu.fr:443/cas/" />
			</beans:bean>
		</beans:property>
		<beans:property name="key" value="casAuthProviderKey" />
	</beans:bean>

	<jdbc-user-service id="jdbcCasUserService"
		data-source-ref="SAG_security_DS"
		users-by-username-query="select logENT,1, statut 
										from Utilisateur u, Etudiant e 
										where u.id = e.ID_U and logENT=?"
		authorities-by-username-query="select logENT, r.nom 
												from Utilisateur u, Etudiant e, Role r 
												where u.id = e.ID_U and u.ID_ROLE = r.id and logENT =? " />
												
	<!-- Ce filtre gère le Single Logout Request du CAS Server -->
<!--   <beans:bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter"/> -->
  <!-- Ce filtre redirige vers le CAS Server pour signaler que Single Logout doit être effectué -->
<!--   <beans:bean id="requestSingleLogoutFilter" -->
<!--         class="org.springframework.security.web.authentication.logout.LogoutFilter"> -->
<!--     <beans:constructor-arg value="https://ident.univ-amu.fr:443/cas/logout"/> -->
<!--     <beans:constructor-arg> -->
<!--       <beans:bean class= -->
<!--           "org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/> -->
<!--     </beans:constructor-arg> -->
<!--     <beans:property name="filterProcessesUrl" value="/logout"/> -->
<!--   </beans:bean> -->

</beans:beans>