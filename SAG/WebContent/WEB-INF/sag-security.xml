<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- Donne les droits aux différentes url -->
	<!--  <http auto-config="true" use-expressions="true">
		<intercept-url pattern="/**" access="permitAll" />

		<access-denied-handler error-page="/accessdenied" />

		<form-login login-page="login" default-target-url="home"
			username-parameter="username" password-parameter="password"
			always-use-default-target="true" authentication-failure-url="accessdenied" />

		<logout invalidate-session="true" logout-url="logout"
			logout-success-url="logoutconfirm" />

		<form-login login-page="/login" default-target-url="/home"
			username-parameter="username" password-parameter="password"
			always-use-default-target="true" authentication-failure-url="/accessdenied" />

		<logout invalidate-session="true" logout-url="/logout"
			logout-success-url="/logoutconfirm" />
	</http>

	 Fournit les requêtes ainsi que l'algorithme de cryptage pour vérifier 
		le mail et le mot de passe utilisé pour l'authentification 
	<authentication-manager alias="authenticationManager">
		 <authentication-provider> <password-encoder hash="sha" /> <jdbc-user-service 
			data-source-ref="SAG_DS" users-by-username-query=" select mail,password, 
			actif from Person where mail=?" authorities-by-username-query=" select p.mail, 
			r.role from Person p, Role r where p.role_id = r.id and p.mail =? " /> </authentication-provider> 
	</authentication-manager>-->

	<!-- Url de retour du CAS -->
	<beans:bean id="serviceProperties"
		class="org.springframework.security.cas.ServiceProperties">
		<beans:property name="service" value="/home" />
		<beans:property name="sendRenew" value="false" />
	</beans:bean>

	<http entry-point-ref="casEntryPoint">
		<custom-filter position="CAS_FILTER" ref="casFilter" />
	</http>

	<beans:bean id="casFilter"
		class="org.springframework.security.cas.web.CasAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
	</beans:bean>

	<beans:bean id="casEntryPoint"
		class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
		<beans:property name="loginUrl" value="https://ident.univ-amu.fr:443" />
		<beans:property name="serviceProperties" ref="serviceProperties" />
	</beans:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider
			ref="casAuthenticationProvider" />
	</authentication-manager>

	<beans:bean id="casAuthenticationProvider"
		class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
		<beans:property name="authenticationUserDetailsService">
			<beans:bean
				class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
				<beans:constructor-arg ref="userService" />
			</beans:bean>
		</beans:property>
		<beans:property name="serviceProperties" ref="serviceProperties" />
		<beans:property name="ticketValidator">
			<beans:bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
				<beans:constructor-arg index="0" value="https://localhost:9443/cas" />
			</beans:bean>
		</beans:property>
		<beans:property name="key" value="an_id_for_this_auth_provider_only" />
	</beans:bean>

	<user-service id="userService">
		<user name="joe" password="joe" authorities="ROLE_USER" />

	</user-service>

</beans:beans>
